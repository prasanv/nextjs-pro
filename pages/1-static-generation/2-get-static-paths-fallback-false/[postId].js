import React from "react";
import { useRouter } from "next/router";

function PostId({ indPost }) {
  return (
    <div>
      <h2>
        Individual Post generated by getStaticPaths for route -{" "}
        {useRouter().query.postId}{" "}
      </h2>
      <div>
        <h4>
          {indPost.id}.{indPost.title}
        </h4>
        <p>{indPost.body}</p>
      </div>
    </div>
  );
}

export default PostId;

export async function getStaticPaths() {
  // ---- DYNAMICALLY SETTING THE PATH VALUES -----
  // const res = await fetch("https://jsonplaceholder.typicode.com/posts");
  // const data = await res.json();

  // const paths = data.map((item) => {
  //   return {
  //     params: {
  //       postId: `${item.id}`,
  //     },
  //   };
  // });
  // console.log(paths);

  // const paths = [];
  // data.map((item) => paths.push({ params: { postId: item.id.toString() } }));
  // // console.log(paths);

  // return {
  //   paths,
  //   fallback: false, // true/false/blocking
  // };

  // ---- STATICALLY SETTING THE PATH VALUES -----
  return {
    paths: [
      { params: { postId: "1" } },
      { params: { postId: "2" } },
      { params: { postId: "3" } },
    ],
    fallback: false,
  };
}

export async function getStaticProps(context) {
  const { params } = context;
  const res = await fetch(
    `https://jsonplaceholder.typicode.com/posts/${params.postId}`
  );
  const data = await res.json();

  return {
    props: {
      indPost: data,
    },
  };
}
